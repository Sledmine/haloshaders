    ps_2_x
    def c4, -0.5, 16, 0.5, 0.501960814
    dcl_pp t0.xy
    dcl t1.xy
    dcl_pp t2.xyz
    dcl_pp t3.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_cube s3
    mov r0.xyz, c2
    add r0.xyz, -r0, c1
    texld_pp r1, t2, s2
    texld_pp r2, t0, s0
    add_pp r2.xyz, r2, c4.x
    add_pp r2.xyz, r2, r2
    add_pp r3.xyz, r1, c4.x
    add_pp r3.xyw, r3.xyzz, r3.xyzz
    mul_sat_pp r0.w, r3.z, c4.y
    dp3_sat_pp r1.w, r2, r3.xyww
    mad_pp r1.xyz, r2, r1.w, -r1
    mad_pp r0.xyz, r1.w, r0, c2
    add_pp r1.xyz, r1, c4.z
    add_sat_pp r1.xyz, r1, r1
    texld_pp r2, t3, s3
    texld_pp r3, t1, s1
    mul_pp r0.xyz, r0, r3
    mul_pp r0.xyz, r0, c3.z
    add_pp r2, r2.zxyz, c4.x
    mul_sat_pp r1.w, r2.x, c4.y
    add_pp r2.xyz, r2.yzww, r2.yzww
    dp3_sat_pp r1.x, r1, r2
    mul_pp r0.w, r0.w, r1.w
    mul_pp r1.yzw, r0.w, c0.xxyz
    mul_pp r0.xyz, r0, r1.yzww
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r0.w, r0.w
    dp3_sat_pp r1.w, r1.x, r0.w
    mul_pp r0.xyz, r0, r1.w
    mul_pp r1.xyz, r0, c4.w
    mov_pp oC0, r1

// approximately 32 instruction slots used (4 texture, 28 arithmetic)


// 0000:  ffff0201  05000051  a00f0004  bf000000  ....Q__.._..___.
// 0010:  41800000  3f000000  3f008081  0200001f  __.A___?.._?.__.
// 0020:  80000000  b0230000  0200001f  80000000  ___.__#..__.___.
// 0030:  b0030001  0200001f  80000000  b0270002  ._...__.___.._'.
// 0040:  0200001f  80000000  b0270003  0200001f  .__.___.._'..__.
// 0050:  90000000  a00f0800  0200001f  90000000  ___._....__.___.
// 0060:  a00f0801  0200001f  98000000  a00f0802  .....__.___.....
// 0070:  0200001f  98000000  a00f0803  02000001  .__.___......__.
// 0080:  80070000  a0e40002  03000002  80070000  __..._...__.__..
// 0090:  81e40000  a0e40001  03000042  802f0001  __..._..B__.._/.
// 00a0:  b0e40002  a0e40802  03000042  802f0002  ._......B__.._/.
// 00b0:  b0e40000  a0e40800  03000002  80270002  __.._....__.._'.
// 00c0:  80e40002  a0000004  03000002  80270002  ._...__..__.._'.
// 00d0:  80e40002  80e40002  03000002  80270003  ._..._...__.._'.
// 00e0:  80e40001  a0000004  03000002  802b0003  ._...__..__.._+.
// 00f0:  80a40003  80a40003  03000005  80380000  ._..._...__.__8.
// 0100:  80aa0003  a0550004  03000008  80380001  ._..._U..__.._8.
// 0110:  80e40002  80f40003  04000004  80270001  ._..._...__.._'.
// 0120:  80e40002  80ff0001  81e40001  04000004  ._..._..._...__.
// 0130:  80270000  80ff0001  80e40000  a0e40002  __'.._..__..._..
// 0140:  03000002  80270001  80e40001  a0aa0004  .__.._'.._..._..
// 0150:  03000002  80370001  80e40001  80e40001  .__.._7.._..._..
// 0160:  03000042  802f0002  b0e40003  a0e40803  B__.._/.._......
// 0170:  03000042  802f0003  b0e40001  a0e40801  B__.._/.._......
// 0180:  03000005  80270000  80e40000  80e40003  .__.__'.__..._..
// 0190:  03000005  80270000  80e40000  a0aa0003  .__.__'.__..._..
// 01a0:  03000002  802f0002  80920002  a0000004  .__.._/.._...__.
// 01b0:  03000005  80380001  80000002  a0550004  .__.._8..__.._U.
// 01c0:  03000002  80270002  80f90002  80f90002  .__.._'.._..._..
// 01d0:  03000008  80310001  80e40001  80e40002  .__.._1.._..._..
// 01e0:  03000005  80280000  80ff0000  80ff0001  .__.__(.__..._..
// 01f0:  03000005  802e0001  80ff0000  a0900000  .__.._..__..__..
// 0200:  03000005  80270000  80e40000  80f90001  .__.__'.__..._..
// 0210:  03000005  80280000  80000001  80000001  .__.__(..__..__.
// 0220:  03000005  80280000  80ff0000  80ff0000  .__.__(.__..__..
// 0230:  03000005  80280000  80ff0000  80ff0000  .__.__(.__..__..
// 0240:  03000008  80380001  80000001  80ff0000  .__.._8..__.__..
// 0250:  03000005  80270000  80e40000  80ff0001  .__.__'.__..._..
// 0260:  03000005  80270001  80e40000  a0ff0004  .__.._'.__..._..
// 0270:  02000001  802f0800  80e40001  0000ffff  .__._./.._....__
